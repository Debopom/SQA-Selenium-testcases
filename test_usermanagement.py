# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUsermanagement():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_usermanagement(self):
    self.driver.get("http://localhost/OrangeHRM/web/index.php/auth/login")
    self.driver.set_window_size(974, 528)
    self.driver.find_element(By.NAME, "username").send_keys("admin@admin.com")
    self.driver.find_element(By.NAME, "password").send_keys("SQA@admin123")
    self.driver.find_element(By.CSS_SELECTOR, ".oxd-button").click()
    self.driver.find_element(By.LINK_TEXT, "Admin").click()
    self.driver.find_element(By.CSS_SELECTOR, ".\\--visited .oxd-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".oxd-dropdown-menu > li").click()
    self.driver.find_element(By.CSS_SELECTOR, ".oxd-table-card:nth-child(2) .oxd-icon-button:nth-child(2) > .oxd-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".oxd-select-text--focus").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".oxd-grid-item:nth-child(3) .oxd-select-text-input")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".oxd-table-card:nth-child(2) .oxd-icon-button:nth-child(2) > .oxd-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".oxd-grid-item:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".oxd-select-text--focus").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".oxd-grid-item:nth-child(5) .oxd-input-group__label-wrapper")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.close()
  
